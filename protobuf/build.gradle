buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

plugins {
    id 'com.google.protobuf'
    id 'idea'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['protobuf-java-kornilova-l-3.5.1.jar'])
}

repositories {
    repositories {
        mavenCentral()
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }

    generatedFilesBaseDir = "$projectDir/generated"

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            if (task.name == 'generateProto') {
                renameProtobufPackage.dependsOn task
            }
        }
    }
}

sourceSets.main.java.srcDir new File(protobuf.generatedFilesBaseDir + '/main/java')
idea {
    module {
        generatedSourceDirs += file(protobuf.generatedFilesBaseDir + '/main/java')
    }
}

/**
 * Profiled project may contain protobuf in classpath.
 * In this case wrong protobuf version may be used.
 * To avoid it we use protobuf with renamed base package.
 * 
 * The task renames imports in generated java sources
 * from com.google.protobuf
 * to com.github.kornilova_l.libs.com.google.protobuf
 */
task renameProtobufPackage { // depends on generateProto task (dependency is set above)
    doLast {
        ant.replaceregexp(match: '(?<!com\\.github\\.kornilova_l\\.libs\\.)com\\.google\\.protobuf',
                replace: 'com.github.kornilova_l.libs.com.google.protobuf', flags: 'g', byline: true) {
            fileset(dir: protobuf.generatedFilesBaseDir + '/main/java')
        }
    }
}

compileKotlin.dependsOn renameProtobufPackage
